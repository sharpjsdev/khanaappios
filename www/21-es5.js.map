{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-nav_2.entry.js"],"names":["VIEW_STATE_NEW","VIEW_STATE_ATTACHED","VIEW_STATE_DESTROYED","ViewController","component","params","state","container","element","delegate","init","_destroy","removeViewFromDom","parentElement","remove","nav","undefined","matches","view","id","currentParams","keysA","Object","keys","keysB","length","key","convertToView","page","convertToViews","pages","map","componentProps","filter","v","navCss","Nav","hostRef","ionNavWillLoad","ionNavWillChange","ionNavDidChange","transInstr","animationEnabled","useRouter","isTransitioning","destroyed","views","animated","swipeGestureChanged","gesture","enable","swipeGesture","rootChanged","root","setRoot","rootParams","componentWillLoad","document","querySelector","el","closest","mode","getBoolean","emit","createSwipeBackGesture","canStart","bind","onStart","onMove","onEnd","componentDidLoad","disconnectedCallback","destroy","push","opts","done","queueTrns","insertStart","insertViews","insert","insertIndex","insertPages","insertComponents","pop","removeStart","removeCount","popTo","indexOrViewCtrl","tiConfig","removeView","popToRoot","removeIndex","startIndex","setPages","setRouteId","direction","animation","active","getActiveSync","Promise","resolve","changed","promise","r","finish","commonOpts","updateURL","viewIsReady","enteringEl","mark","p","markVisible","viewController","find","assign","animationBuilder","tagName","getRouteId","getActive","getByIndex","index","canGoBack","canGoBackSync","getPrevious","getPreviousSync","getLength","indexOf","ti","skipIfBusy","reject","router","canTransition","nextTrns","success","result","fireError","hasCompleted","requiresTransition","enteringView","leavingView","navChanged","failed","rejectReason","shift","runTransition","prepareTI","getEnteringView","Error","postViewInit","enteringRequiresTransition","leavingRequiresTransition","isBackDirection","transition","viewsLength","viewControllers","removeEnd","i","destroyQueue","finalBalance","console","warn","insertViewAt","destroyView","progressCallback","progressAnimation","ani","sbAni","leavingEl","animationOpts","showGoBack","baseEl","get","transitionFinish","cleanupView","cleanup","existingIndex","splice","activeView","activeViewIndex","stepValue","progressStep","shouldComplete","dur","onFinish","oneTimeCallback","newStepValue","easing","progressEnd","render","style","navLink","routerDirection","routerAnimation","NavLink","onClick"],"mappings":"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","file":"21-es5.js","sourcesContent":["import { r as registerInstance, e as createEvent, h, i as getElement, H as Host } from './index-7a8b7a1c.js';\nimport { b as getIonMode, c as config } from './ionic-global-63a97a32.js';\nimport { g as getTimeGivenProgression } from './cubic-bezier-eea9a7a9.js';\nimport { m as assert } from './helpers-1457892a.js';\nimport { l as lifecycle, t as transition, s as setPageHidden, d as LIFECYCLE_WILL_UNLOAD, b as LIFECYCLE_WILL_LEAVE, c as LIFECYCLE_DID_LEAVE } from './index-a7711c1e.js';\nimport { a as attachComponent } from './framework-delegate-94e770cc.js';\n\nconst VIEW_STATE_NEW = 1;\nconst VIEW_STATE_ATTACHED = 2;\nconst VIEW_STATE_DESTROYED = 3;\nclass ViewController {\n  constructor(component, params) {\n    this.component = component;\n    this.params = params;\n    this.state = VIEW_STATE_NEW;\n  }\n  async init(container) {\n    this.state = VIEW_STATE_ATTACHED;\n    if (!this.element) {\n      const component = this.component;\n      this.element = await attachComponent(this.delegate, container, component, ['ion-page', 'ion-page-invisible'], this.params);\n    }\n  }\n  /**\n   * DOM WRITE\n   */\n  _destroy() {\n    assert(this.state !== VIEW_STATE_DESTROYED, 'view state must be ATTACHED');\n    const element = this.element;\n    if (element) {\n      if (this.delegate) {\n        this.delegate.removeViewFromDom(element.parentElement, element);\n      }\n      else {\n        element.remove();\n      }\n    }\n    this.nav = undefined;\n    this.state = VIEW_STATE_DESTROYED;\n  }\n}\nconst matches = (view, id, params) => {\n  if (!view) {\n    return false;\n  }\n  if (view.component !== id) {\n    return false;\n  }\n  const currentParams = view.params;\n  if (currentParams === params) {\n    return true;\n  }\n  if (!currentParams && !params) {\n    return true;\n  }\n  if (!currentParams || !params) {\n    return false;\n  }\n  const keysA = Object.keys(currentParams);\n  const keysB = Object.keys(params);\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n  // Test for A's keys different from B.\n  for (const key of keysA) {\n    if (currentParams[key] !== params[key]) {\n      return false;\n    }\n  }\n  return true;\n};\nconst convertToView = (page, params) => {\n  if (!page) {\n    return null;\n  }\n  if (page instanceof ViewController) {\n    return page;\n  }\n  return new ViewController(page, params);\n};\nconst convertToViews = (pages) => {\n  return pages.map(page => {\n    if (page instanceof ViewController) {\n      return page;\n    }\n    if ('component' in page) {\n      /**\n       * TODO Ionic 6:\n       * Consider switching to just using `undefined` here\n       * as well as on the public interfaces and on\n       * `NavComponentWithProps`. Previously `pages` was\n       * of type `any[]` so TypeScript did not catch this.\n       */\n      return convertToView(page.component, (page.componentProps === null) ? undefined : page.componentProps);\n    }\n    return convertToView(page, undefined);\n  }).filter(v => v !== null);\n};\n\nconst navCss = \":host{left:0;right:0;top:0;bottom:0;position:absolute;contain:layout size style;overflow:hidden;z-index:0}\";\n\nconst Nav = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionNavWillLoad = createEvent(this, \"ionNavWillLoad\", 7);\n    this.ionNavWillChange = createEvent(this, \"ionNavWillChange\", 3);\n    this.ionNavDidChange = createEvent(this, \"ionNavDidChange\", 3);\n    this.transInstr = [];\n    this.animationEnabled = true;\n    this.useRouter = false;\n    this.isTransitioning = false;\n    this.destroyed = false;\n    this.views = [];\n    /**\n     * If `true`, the nav should animate the transition of components.\n     */\n    this.animated = true;\n  }\n  swipeGestureChanged() {\n    if (this.gesture) {\n      this.gesture.enable(this.swipeGesture === true);\n    }\n  }\n  rootChanged() {\n    if (this.root !== undefined) {\n      if (!this.useRouter) {\n        this.setRoot(this.root, this.rootParams);\n      }\n    }\n  }\n  componentWillLoad() {\n    this.useRouter =\n      !!document.querySelector('ion-router') &&\n        !this.el.closest('[no-router]');\n    if (this.swipeGesture === undefined) {\n      const mode = getIonMode(this);\n      this.swipeGesture = config.getBoolean('swipeBackEnabled', mode === 'ios');\n    }\n    this.ionNavWillLoad.emit();\n  }\n  async componentDidLoad() {\n    this.rootChanged();\n    this.gesture = (await import('./swipe-back-1bbd08e0.js')).createSwipeBackGesture(this.el, this.canStart.bind(this), this.onStart.bind(this), this.onMove.bind(this), this.onEnd.bind(this));\n    this.swipeGestureChanged();\n  }\n  disconnectedCallback() {\n    for (const view of this.views) {\n      lifecycle(view.element, LIFECYCLE_WILL_UNLOAD);\n      view._destroy();\n    }\n    if (this.gesture) {\n      this.gesture.destroy();\n      this.gesture = undefined;\n    }\n    // release swipe back gesture and transition\n    this.transInstr.length = this.views.length = 0;\n    this.destroyed = true;\n  }\n  /**\n   * Push a new component onto the current navigation stack. Pass any additional\n   * information along as an object. This additional information is accessible\n   * through NavParams.\n   *\n   * @param component The component to push onto the navigation stack.\n   * @param componentProps Any properties of the component.\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  push(component, componentProps, opts, done) {\n    return this.queueTrns({\n      insertStart: -1,\n      insertViews: [{ component, componentProps }],\n      opts\n    }, done);\n  }\n  /**\n   * Inserts a component into the navigation stack at the specified index.\n   * This is useful to add a component at any point in the navigation stack.\n   *\n   * @param insertIndex The index to insert the component at in the stack.\n   * @param component The component to insert into the navigation stack.\n   * @param componentProps Any properties of the component.\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  insert(insertIndex, component, componentProps, opts, done) {\n    return this.queueTrns({\n      insertStart: insertIndex,\n      insertViews: [{ component, componentProps }],\n      opts\n    }, done);\n  }\n  /**\n   * Inserts an array of components into the navigation stack at the specified index.\n   * The last component in the array will become instantiated as a view, and animate\n   * in to become the active view.\n   *\n   * @param insertIndex The index to insert the components at in the stack.\n   * @param insertComponents The components to insert into the navigation stack.\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  insertPages(insertIndex, insertComponents, opts, done) {\n    return this.queueTrns({\n      insertStart: insertIndex,\n      insertViews: insertComponents,\n      opts\n    }, done);\n  }\n  /**\n   * Pop a component off of the navigation stack. Navigates back from the current\n   * component.\n   *\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  pop(opts, done) {\n    return this.queueTrns({\n      removeStart: -1,\n      removeCount: 1,\n      opts\n    }, done);\n  }\n  /**\n   * Pop to a specific index in the navigation stack.\n   *\n   * @param indexOrViewCtrl The index or view controller to pop to.\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  popTo(indexOrViewCtrl, opts, done) {\n    const tiConfig = {\n      removeStart: -1,\n      removeCount: -1,\n      opts\n    };\n    if (typeof indexOrViewCtrl === 'object' && indexOrViewCtrl.component) {\n      tiConfig.removeView = indexOrViewCtrl;\n      tiConfig.removeStart = 1;\n    }\n    else if (typeof indexOrViewCtrl === 'number') {\n      tiConfig.removeStart = indexOrViewCtrl + 1;\n    }\n    return this.queueTrns(tiConfig, done);\n  }\n  /**\n   * Navigate back to the root of the stack, no matter how far back that is.\n   *\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  popToRoot(opts, done) {\n    return this.queueTrns({\n      removeStart: 1,\n      removeCount: -1,\n      opts\n    }, done);\n  }\n  /**\n   * Removes a component from the navigation stack at the specified index.\n   *\n   * @param startIndex The number to begin removal at.\n   * @param removeCount The number of components to remove.\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  removeIndex(startIndex, removeCount = 1, opts, done) {\n    return this.queueTrns({\n      removeStart: startIndex,\n      removeCount,\n      opts\n    }, done);\n  }\n  /**\n   * Set the root for the current navigation stack to a component.\n   *\n   * @param component The component to set as the root of the navigation stack.\n   * @param componentProps Any properties of the component.\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  setRoot(component, componentProps, opts, done) {\n    return this.setPages([{ component, componentProps }], opts, done);\n  }\n  /**\n   * Set the views of the current navigation stack and navigate to the last view.\n   * By default animations are disabled, but they can be enabled by passing options\n   * to the navigation controller. Navigation parameters can also be passed to the\n   * individual pages in the array.\n   *\n   * @param views The list of views to set as the navigation stack.\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  setPages(views, opts, done) {\n    if (opts == null) {\n      opts = {};\n    }\n    // if animation wasn't set to true then default it to NOT animate\n    if (opts.animated !== true) {\n      opts.animated = false;\n    }\n    return this.queueTrns({\n      insertStart: 0,\n      insertViews: views,\n      removeStart: 0,\n      removeCount: -1,\n      opts\n    }, done);\n  }\n  /** @internal */\n  setRouteId(id, params, direction, animation) {\n    const active = this.getActiveSync();\n    if (matches(active, id, params)) {\n      return Promise.resolve({\n        changed: false,\n        element: active.element\n      });\n    }\n    let resolve;\n    const promise = new Promise(r => (resolve = r));\n    let finish;\n    const commonOpts = {\n      updateURL: false,\n      viewIsReady: enteringEl => {\n        let mark;\n        const p = new Promise(r => (mark = r));\n        resolve({\n          changed: true,\n          element: enteringEl,\n          markVisible: async () => {\n            mark();\n            await finish;\n          }\n        });\n        return p;\n      }\n    };\n    if (direction === 'root') {\n      finish = this.setRoot(id, params, commonOpts);\n    }\n    else {\n      const viewController = this.views.find(v => matches(v, id, params));\n      if (viewController) {\n        finish = this.popTo(viewController, Object.assign(Object.assign({}, commonOpts), { direction: 'back', animationBuilder: animation }));\n      }\n      else if (direction === 'forward') {\n        finish = this.push(id, params, Object.assign(Object.assign({}, commonOpts), { animationBuilder: animation }));\n      }\n      else if (direction === 'back') {\n        finish = this.setRoot(id, params, Object.assign(Object.assign({}, commonOpts), { direction: 'back', animated: true, animationBuilder: animation }));\n      }\n    }\n    return promise;\n  }\n  /** @internal */\n  async getRouteId() {\n    const active = this.getActiveSync();\n    return active\n      ? {\n        id: active.element.tagName,\n        params: active.params,\n        element: active.element\n      }\n      : undefined;\n  }\n  /**\n   * Get the active view.\n   */\n  getActive() {\n    return Promise.resolve(this.getActiveSync());\n  }\n  /**\n   * Get the view at the specified index.\n   *\n   * @param index The index of the view.\n   */\n  getByIndex(index) {\n    return Promise.resolve(this.views[index]);\n  }\n  /**\n   * Returns `true` if the current view can go back.\n   *\n   * @param view The view to check.\n   */\n  canGoBack(view) {\n    return Promise.resolve(this.canGoBackSync(view));\n  }\n  /**\n   * Get the previous view.\n   *\n   * @param view The view to get.\n   */\n  getPrevious(view) {\n    return Promise.resolve(this.getPreviousSync(view));\n  }\n  getLength() {\n    return this.views.length;\n  }\n  getActiveSync() {\n    return this.views[this.views.length - 1];\n  }\n  canGoBackSync(view = this.getActiveSync()) {\n    return !!(view && this.getPreviousSync(view));\n  }\n  getPreviousSync(view = this.getActiveSync()) {\n    if (!view) {\n      return undefined;\n    }\n    const views = this.views;\n    const index = views.indexOf(view);\n    return index > 0 ? views[index - 1] : undefined;\n  }\n  // _queueTrns() adds a navigation stack change to the queue and schedules it to run:\n  // 1. _nextTrns(): consumes the next transition in the queue\n  // 2. _viewInit(): initializes enteringView if required\n  // 3. _viewTest(): ensures canLeave/canEnter Returns `true`, so the operation can continue\n  // 4. _postViewInit(): add/remove the views from the navigation stack\n  // 5. _transitionInit(): initializes the visual transition if required and schedules it to run\n  // 6. _viewAttachToDOM(): attaches the enteringView to the DOM\n  // 7. _transitionStart(): called once the transition actually starts, it initializes the Animation underneath.\n  // 8. _transitionFinish(): called once the transition finishes\n  // 9. _cleanup(): syncs the navigation internal state with the DOM. For example it removes the pages from the DOM or hides/show them.\n  async queueTrns(ti, done) {\n    if (this.isTransitioning && ti.opts != null && ti.opts.skipIfBusy) {\n      return Promise.resolve(false);\n    }\n    const promise = new Promise((resolve, reject) => {\n      ti.resolve = resolve;\n      ti.reject = reject;\n    });\n    ti.done = done;\n    /**\n     * If using router, check to see if navigation hooks\n     * will allow us to perform this transition. This\n     * is required in order for hooks to work with\n     * the ion-back-button or swipe to go back.\n     */\n    if (ti.opts && ti.opts.updateURL !== false && this.useRouter) {\n      const router = document.querySelector('ion-router');\n      if (router) {\n        const canTransition = await router.canTransition();\n        if (canTransition === false) {\n          return Promise.resolve(false);\n        }\n        else if (typeof canTransition === 'string') {\n          router.push(canTransition, ti.opts.direction || 'back');\n          return Promise.resolve(false);\n        }\n      }\n    }\n    // Normalize empty\n    if (ti.insertViews && ti.insertViews.length === 0) {\n      ti.insertViews = undefined;\n    }\n    // Enqueue transition instruction\n    this.transInstr.push(ti);\n    // if there isn't a transition already happening\n    // then this will kick off this transition\n    this.nextTrns();\n    return promise;\n  }\n  success(result, ti) {\n    if (this.destroyed) {\n      this.fireError('nav controller was destroyed', ti);\n      return;\n    }\n    if (ti.done) {\n      ti.done(result.hasCompleted, result.requiresTransition, result.enteringView, result.leavingView, result.direction);\n    }\n    ti.resolve(result.hasCompleted);\n    if (ti.opts.updateURL !== false && this.useRouter) {\n      const router = document.querySelector('ion-router');\n      if (router) {\n        const direction = result.direction === 'back' ? 'back' : 'forward';\n        router.navChanged(direction);\n      }\n    }\n  }\n  failed(rejectReason, ti) {\n    if (this.destroyed) {\n      this.fireError('nav controller was destroyed', ti);\n      return;\n    }\n    this.transInstr.length = 0;\n    this.fireError(rejectReason, ti);\n  }\n  fireError(rejectReason, ti) {\n    if (ti.done) {\n      ti.done(false, false, rejectReason);\n    }\n    if (ti.reject && !this.destroyed) {\n      ti.reject(rejectReason);\n    }\n    else {\n      ti.resolve(false);\n    }\n  }\n  nextTrns() {\n    // this is the framework's bread 'n butta function\n    // only one transition is allowed at any given time\n    if (this.isTransitioning) {\n      return false;\n    }\n    // there is no transition happening right now\n    // get the next instruction\n    const ti = this.transInstr.shift();\n    if (!ti) {\n      return false;\n    }\n    this.runTransition(ti);\n    return true;\n  }\n  async runTransition(ti) {\n    try {\n      // set that this nav is actively transitioning\n      this.ionNavWillChange.emit();\n      this.isTransitioning = true;\n      this.prepareTI(ti);\n      const leavingView = this.getActiveSync();\n      const enteringView = this.getEnteringView(ti, leavingView);\n      if (!leavingView && !enteringView) {\n        throw new Error('no views in the stack to be removed');\n      }\n      if (enteringView && enteringView.state === VIEW_STATE_NEW) {\n        await enteringView.init(this.el);\n      }\n      this.postViewInit(enteringView, leavingView, ti);\n      // Needs transition?\n      const requiresTransition = (ti.enteringRequiresTransition || ti.leavingRequiresTransition) &&\n        enteringView !== leavingView;\n      if (requiresTransition && ti.opts && leavingView) {\n        const isBackDirection = ti.opts.direction === 'back';\n        /**\n         * If heading back, use the entering page's animation\n         * unless otherwise specified by the developer.\n         */\n        if (isBackDirection) {\n          ti.opts.animationBuilder = ti.opts.animationBuilder || (enteringView && enteringView.animationBuilder);\n        }\n        leavingView.animationBuilder = ti.opts.animationBuilder;\n      }\n      const result = requiresTransition\n        ? await this.transition(enteringView, leavingView, ti)\n        : {\n          // transition is not required, so we are already done!\n          // they're inserting/removing the views somewhere in the middle or\n          // beginning, so visually nothing needs to animate/transition\n          // resolve immediately because there's no animation that's happening\n          hasCompleted: true,\n          requiresTransition: false\n        };\n      this.success(result, ti);\n      this.ionNavDidChange.emit();\n    }\n    catch (rejectReason) {\n      this.failed(rejectReason, ti);\n    }\n    this.isTransitioning = false;\n    this.nextTrns();\n  }\n  prepareTI(ti) {\n    const viewsLength = this.views.length;\n    ti.opts = ti.opts || {};\n    if (ti.opts.delegate === undefined) {\n      ti.opts.delegate = this.delegate;\n    }\n    if (ti.removeView !== undefined) {\n      assert(ti.removeStart !== undefined, 'removeView needs removeStart');\n      assert(ti.removeCount !== undefined, 'removeView needs removeCount');\n      const index = this.views.indexOf(ti.removeView);\n      if (index < 0) {\n        throw new Error('removeView was not found');\n      }\n      ti.removeStart += index;\n    }\n    if (ti.removeStart !== undefined) {\n      if (ti.removeStart < 0) {\n        ti.removeStart = viewsLength - 1;\n      }\n      if (ti.removeCount < 0) {\n        ti.removeCount = viewsLength - ti.removeStart;\n      }\n      ti.leavingRequiresTransition =\n        ti.removeCount > 0 && ti.removeStart + ti.removeCount === viewsLength;\n    }\n    if (ti.insertViews) {\n      // allow -1 to be passed in to auto push it on the end\n      // and clean up the index if it's larger then the size of the stack\n      if (ti.insertStart < 0 || ti.insertStart > viewsLength) {\n        ti.insertStart = viewsLength;\n      }\n      ti.enteringRequiresTransition = ti.insertStart === viewsLength;\n    }\n    const insertViews = ti.insertViews;\n    if (!insertViews) {\n      return;\n    }\n    assert(insertViews.length > 0, 'length can not be zero');\n    const viewControllers = convertToViews(insertViews);\n    if (viewControllers.length === 0) {\n      throw new Error('invalid views to insert');\n    }\n    // Check all the inserted view are correct\n    for (const view of viewControllers) {\n      view.delegate = ti.opts.delegate;\n      const nav = view.nav;\n      if (nav && nav !== this) {\n        throw new Error('inserted view was already inserted');\n      }\n      if (view.state === VIEW_STATE_DESTROYED) {\n        throw new Error('inserted view was already destroyed');\n      }\n    }\n    ti.insertViews = viewControllers;\n  }\n  getEnteringView(ti, leavingView) {\n    const insertViews = ti.insertViews;\n    if (insertViews !== undefined) {\n      // grab the very last view of the views to be inserted\n      // and initialize it as the new entering view\n      return insertViews[insertViews.length - 1];\n    }\n    const removeStart = ti.removeStart;\n    if (removeStart !== undefined) {\n      const views = this.views;\n      const removeEnd = removeStart + ti.removeCount;\n      for (let i = views.length - 1; i >= 0; i--) {\n        const view = views[i];\n        if ((i < removeStart || i >= removeEnd) && view !== leavingView) {\n          return view;\n        }\n      }\n    }\n    return undefined;\n  }\n  postViewInit(enteringView, leavingView, ti) {\n    assert(leavingView || enteringView, 'Both leavingView and enteringView are null');\n    assert(ti.resolve, 'resolve must be valid');\n    assert(ti.reject, 'reject must be valid');\n    const opts = ti.opts;\n    const insertViews = ti.insertViews;\n    const removeStart = ti.removeStart;\n    const removeCount = ti.removeCount;\n    let destroyQueue;\n    // there are views to remove\n    if (removeStart !== undefined && removeCount !== undefined) {\n      assert(removeStart >= 0, 'removeStart can not be negative');\n      assert(removeCount >= 0, 'removeCount can not be negative');\n      destroyQueue = [];\n      for (let i = 0; i < removeCount; i++) {\n        const view = this.views[i + removeStart];\n        if (view && view !== enteringView && view !== leavingView) {\n          destroyQueue.push(view);\n        }\n      }\n      // default the direction to \"back\"\n      opts.direction = opts.direction || 'back';\n    }\n    const finalBalance = this.views.length +\n      (insertViews !== undefined ? insertViews.length : 0) -\n      (removeCount !== undefined ? removeCount : 0);\n    assert(finalBalance >= 0, 'final balance can not be negative');\n    if (finalBalance === 0) {\n      console.warn(`You can't remove all the pages in the navigation stack. nav.pop() is probably called too many times.`, this, this.el);\n      throw new Error('navigation stack needs at least one root page');\n    }\n    // At this point the transition can not be rejected, any throw should be an error\n    // there are views to insert\n    if (insertViews) {\n      // add the views to the\n      let insertIndex = ti.insertStart;\n      for (const view of insertViews) {\n        this.insertViewAt(view, insertIndex);\n        insertIndex++;\n      }\n      if (ti.enteringRequiresTransition) {\n        // default to forward if not already set\n        opts.direction = opts.direction || 'forward';\n      }\n    }\n    // if the views to be removed are in the beginning or middle\n    // and there is not a view that needs to visually transition out\n    // then just destroy them and don't transition anything\n    // batch all of lifecycles together\n    // let's make sure, callbacks are zoned\n    if (destroyQueue && destroyQueue.length > 0) {\n      for (const view of destroyQueue) {\n        lifecycle(view.element, LIFECYCLE_WILL_LEAVE);\n        lifecycle(view.element, LIFECYCLE_DID_LEAVE);\n        lifecycle(view.element, LIFECYCLE_WILL_UNLOAD);\n      }\n      // once all lifecycle events has been delivered, we can safely detroy the views\n      for (const view of destroyQueue) {\n        this.destroyView(view);\n      }\n    }\n  }\n  async transition(enteringView, leavingView, ti) {\n    // we should animate (duration > 0) if the pushed page is not the first one (startup)\n    // or if it is a portal (modal, actionsheet, etc.)\n    const opts = ti.opts;\n    const progressCallback = opts.progressAnimation\n      ? (ani) => this.sbAni = ani\n      : undefined;\n    const mode = getIonMode(this);\n    const enteringEl = enteringView.element;\n    const leavingEl = leavingView && leavingView.element;\n    const animationOpts = Object.assign(Object.assign({ mode, showGoBack: this.canGoBackSync(enteringView), baseEl: this.el, progressCallback, animated: this.animated && config.getBoolean('animated', true), enteringEl,\n      leavingEl }, opts), { animationBuilder: opts.animationBuilder || this.animation || config.get('navAnimation') });\n    const { hasCompleted } = await transition(animationOpts);\n    return this.transitionFinish(hasCompleted, enteringView, leavingView, opts);\n  }\n  transitionFinish(hasCompleted, enteringView, leavingView, opts) {\n    const cleanupView = hasCompleted ? enteringView : leavingView;\n    if (cleanupView) {\n      this.cleanup(cleanupView);\n    }\n    return {\n      hasCompleted,\n      requiresTransition: true,\n      enteringView,\n      leavingView,\n      direction: opts.direction\n    };\n  }\n  insertViewAt(view, index) {\n    const views = this.views;\n    const existingIndex = views.indexOf(view);\n    if (existingIndex > -1) {\n      // this view is already in the stack!!\n      // move it to its new location\n      assert(view.nav === this, 'view is not part of the nav');\n      views.splice(index, 0, views.splice(existingIndex, 1)[0]);\n    }\n    else {\n      assert(!view.nav, 'nav is used');\n      // this is a new view to add to the stack\n      // create the new entering view\n      view.nav = this;\n      // insert the entering view into the correct index in the stack\n      views.splice(index, 0, view);\n    }\n  }\n  removeView(view) {\n    assert(view.state === VIEW_STATE_ATTACHED || view.state === VIEW_STATE_DESTROYED, 'view state should be loaded or destroyed');\n    const views = this.views;\n    const index = views.indexOf(view);\n    assert(index > -1, 'view must be part of the stack');\n    if (index >= 0) {\n      views.splice(index, 1);\n    }\n  }\n  destroyView(view) {\n    view._destroy();\n    this.removeView(view);\n  }\n  /**\n   * DOM WRITE\n   */\n  cleanup(activeView) {\n    // ok, cleanup time!! Destroy all of the views that are\n    // INACTIVE and come after the active view\n    // only do this if the views exist, though\n    if (this.destroyed) {\n      return;\n    }\n    const views = this.views;\n    const activeViewIndex = views.indexOf(activeView);\n    for (let i = views.length - 1; i >= 0; i--) {\n      const view = views[i];\n      /**\n       * When inserting multiple views via insertPages\n       * the last page will be transitioned to, but the\n       * others will not be. As a result, a DOM element\n       * will only be created for the last page inserted.\n       * As a result, it is possible to have views in the\n       * stack that do not have `view.element` yet.\n       */\n      const element = view.element;\n      if (element) {\n        if (i > activeViewIndex) {\n          // this view comes after the active view\n          // let's unload it\n          lifecycle(element, LIFECYCLE_WILL_UNLOAD);\n          this.destroyView(view);\n        }\n        else if (i < activeViewIndex) {\n          // this view comes before the active view\n          // and it is not a portal then ensure it is hidden\n          setPageHidden(element, true);\n        }\n      }\n    }\n  }\n  canStart() {\n    return (!!this.swipeGesture &&\n      !this.isTransitioning &&\n      this.transInstr.length === 0 &&\n      this.animationEnabled &&\n      this.canGoBackSync());\n  }\n  onStart() {\n    this.queueTrns({\n      removeStart: -1,\n      removeCount: 1,\n      opts: {\n        direction: 'back',\n        progressAnimation: true\n      }\n    }, undefined);\n  }\n  onMove(stepValue) {\n    if (this.sbAni) {\n      this.sbAni.progressStep(stepValue);\n    }\n  }\n  onEnd(shouldComplete, stepValue, dur) {\n    if (this.sbAni) {\n      this.animationEnabled = false;\n      this.sbAni.onFinish(() => {\n        this.animationEnabled = true;\n      }, { oneTimeCallback: true });\n      // Account for rounding errors in JS\n      let newStepValue = (shouldComplete) ? -0.001 : 0.001;\n      /**\n       * Animation will be reversed here, so need to\n       * reverse the easing curve as well\n       *\n       * Additionally, we need to account for the time relative\n       * to the new easing curve, as `stepValue` is going to be given\n       * in terms of a linear curve.\n       */\n      if (!shouldComplete) {\n        this.sbAni.easing('cubic-bezier(1, 0, 0.68, 0.28)');\n        newStepValue += getTimeGivenProgression([0, 0], [1, 0], [0.68, 0.28], [1, 1], stepValue)[0];\n      }\n      else {\n        newStepValue += getTimeGivenProgression([0, 0], [0.32, 0.72], [0, 1], [1, 1], stepValue)[0];\n      }\n      this.sbAni.progressEnd(shouldComplete ? 1 : 0, newStepValue, dur);\n    }\n  }\n  render() {\n    return (h(\"slot\", null));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"swipeGesture\": [\"swipeGestureChanged\"],\n    \"root\": [\"rootChanged\"]\n  }; }\n};\nNav.style = navCss;\n\nconst navLink = (el, routerDirection, component, componentProps, routerAnimation) => {\n  const nav = el.closest('ion-nav');\n  if (nav) {\n    if (routerDirection === 'forward') {\n      if (component !== undefined) {\n        return nav.push(component, componentProps, { skipIfBusy: true, animationBuilder: routerAnimation });\n      }\n    }\n    else if (routerDirection === 'root') {\n      if (component !== undefined) {\n        return nav.setRoot(component, componentProps, { skipIfBusy: true, animationBuilder: routerAnimation });\n      }\n    }\n    else if (routerDirection === 'back') {\n      return nav.pop({ skipIfBusy: true, animationBuilder: routerAnimation });\n    }\n  }\n  return Promise.resolve(false);\n};\n\nconst NavLink = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /**\n     * The transition direction when navigating to another page.\n     */\n    this.routerDirection = 'forward';\n    this.onClick = () => {\n      return navLink(this.el, this.routerDirection, this.component, this.componentProps, this.routerAnimation);\n    };\n  }\n  render() {\n    return (h(Host, { onClick: this.onClick }));\n  }\n  get el() { return getElement(this); }\n};\n\nexport { Nav as ion_nav, NavLink as ion_nav_link };\n"]}